
@mixin ag-theme-base-part-header {
    
    .ag-header {
        background-color: ag-param(header-background-color);
        @include ag-border(critical, bottom);
    }
    
    .ag-header-row {
        color: ag-param(header-foreground-color);
    }

    .ag-pinned-right-header {
        @include ag-border(critical, left);
    }

    .ag-pinned-left-header {
        @include ag-border(critical, right);
    }

    .ag-header-row {
        height: ag-param(header-height);
    }

    .ag-header-cell:not(.ag-numeric-header) .ag-header-label-icon {
        @include ag-theme-rtl(( margin-left: ag-param(grid-size) ));
    }

    .ag-header-cell.ag-numeric-header .ag-header-label-icon {
        @include ag-theme-rtl(( margin-right: ag-param(grid-size) ));
    }

    .ag-header-cell,
    .ag-header-group-cell {
        padding-left: ag-param(cell-horizontal-padding);
        padding-right: ag-param(cell-horizontal-padding);
        
        &.ag-header-cell-moving {
            background-color: ag-param(header-cell-moving-background-color);
        }
    }

    .ag-header-icon {
        color: ag-param(secondary-foreground-color);
    }

    .ag-header-expand-icon {
        cursor: pointer;
        @include ag-theme-rtl(( padding-left: 4px ));
    }

    .ag-header-row:not(:first-child) {
        .ag-header-cell,
        .ag-header-group-cell.ag-header-group-cell-with-group {
            @include ag-border(critical, top);
        }
    }

    // This logic with :not(.ag-column-resizing) is to prevent a mouseover effect
    // being applied to the adjacent cell as the user resizes a cell, because
    // during a resize, the mouse will momentarily move over the neighbouring cell
    .ag-header-group-cell:not(.ag-column-resizing) + .ag-header-group-cell,
    .ag-header-cell:not(.ag-column-resizing) + .ag-header-cell,
    .ag-header-group-cell:first-of-type,
    .ag-header-cell:first-of-type {
        @if (ag-param(header-cell-hover-background-color) and ag-param(header-background-color) != ag-param(header-cell-hover-background-color)) {
            &:hover,
            &.ag-column-resizing {
                background-color: ag-param(header-cell-hover-background-color);
            }
        }
    }
    
    @if ag-param(header-column-separator) {
        .ag-header-cell::after,
        .ag-header-group-cell::after {
            content: "";
            position: absolute;
            z-index: 1;
            display: block;
            width: ag-param(header-column-separator-width);
            height: ag-param(header-column-separator-height);
            top: calc(50% - #{ag-param(header-column-separator-height) / 2});
            background-color: ag-param(header-column-separator-color);

            @include ag-theme-rtl(( right: 0 ));
        }
    }
    
    @if ag-param(header-column-resize-handle) {
        .ag-header-cell-resize {
            display: flex;
            align-items: center;
        }

        .ag-header-cell-resize::after {
            content: "";
            position: absolute;
            z-index: 1;
            display: block;
            left: calc(50% - #{ag-param(header-column-resize-handle-width) / 2});
            width: ag-param(header-column-resize-handle-width);
            height: ag-param(header-column-resize-handle-height);
            top: calc(50% - #{ag-param(header-column-resize-handle-height) / 2});
            background-color: ag-param(header-column-resize-handle-color);
        }

        .ag-pinned-right-header .ag-header-cell-resize::after {
            margin-left: 2px;
        }
    }

    .ag-header-select-all {
        @include ag-theme-rtl(( margin-right: ag-param(cell-horizontal-padding) ));
    }

    .ag-dnd-ghost {
        @include ag-card();
        overflow: hidden;
        padding: 3px;
        text-overflow: ellipsis;
        z-index: 10;
        @include ag-border(secondary);
        color: ag-param(secondary-foreground-color);
        height: ag-param(header-height) !important;
        line-height: ag-param(header-height);
        margin: 0;
        padding: 0 ag-param(grid-size) * 2;
        transform: translateY(ag-param(grid-size) * 2);
    }

    .ag-dnd-ghost-icon {
        margin-right: ag-param(grid-size);
        color: ag-param(foreground-color);
    }
    
    .ag-floating-filter-button {
        @include ag-theme-rtl(( margin-left: ag-param(grid-size) * 3 ));
    }

    .ag-floating-filter-button-button {
        @include ag-inherit-text-styles();
        appearance: none;
        background: transparent;
        border: none;
        height: ag-param(icon-size);
        padding: 0;
        width: ag-param(icon-size);
    }

    .ag-filter-loading {
        background-color: ag-param(control-panel-background-color);
        height: 100%;
        padding: 5px;
        position: absolute;
        top: 34px;
        width: 100%;
        z-index: 1;

        @include ag-border(critical, top);
    }
}
