{"ast":null,"code":"// ag-grid-react v23.0.3\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArrays = this && this.__spreadArrays || function () {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_1 = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar agGridColumn_1 = require(\"./agGridColumn\");\n\nvar reactComponent_1 = require(\"./reactComponent\");\n\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\n\nvar AgGridReact =\n/** @class */\nfunction (_super) {\n  __extends(AgGridReact, _super);\n\n  function AgGridReact(props, state) {\n    var _this = _super.call(this, props, state) || this;\n\n    _this.props = props;\n    _this.state = state;\n    _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n    _this.api = null;\n    _this.portals = [];\n    _this.hasPendingPortalUpdate = false;\n    _this.destroyed = false;\n    return _this;\n  }\n\n  AgGridReact.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(\"div\", {\n      style: this.createStyleForDiv(),\n      ref: function (e) {\n        _this.eGridDiv = e;\n      }\n    }, this.portals);\n  };\n\n  AgGridReact.prototype.createStyleForDiv = function () {\n    var style = {\n      height: \"100%\"\n    }; // allow user to override styles\n\n    var containerStyle = this.props.containerStyle;\n\n    if (containerStyle) {\n      Object.keys(containerStyle).forEach(function (key) {\n        style[key] = containerStyle[key];\n      });\n    }\n\n    return style;\n  };\n\n  AgGridReact.prototype.componentDidMount = function () {\n    var modules = this.props.modules || [];\n    var gridParams = {\n      providedBeanInstances: {\n        agGridReact: this,\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n      },\n      modules: modules\n    };\n    var gridOptions = this.props.gridOptions || {};\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(this.props)) {\n      gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(this.props);\n    }\n\n    this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props); // don't need the return value\n\n    new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n    this.api = this.gridOptions.api;\n    this.columnApi = this.gridOptions.columnApi;\n  };\n\n  AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, runningTime) {\n    var _this = this;\n\n    if (runningTime === void 0) {\n      runningTime = 0;\n    } // if the grid has been destroyed in the meantime just resolve\n\n\n    if (this.destroyed) {\n      resolve(null);\n      return;\n    }\n\n    if (reactComponent.rendered()) {\n      resolve(null);\n    } else {\n      if (runningTime >= AgGridReact.MAX_COMPONENT_CREATION_TIME) {\n        console.error(\"ag-Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME + \"ms\");\n        return;\n      }\n\n      window.setTimeout(function () {\n        return _this.waitForInstance(reactComponent, resolve, runningTime + 5);\n      }, 5);\n    }\n  };\n  /**\n   * Mounts a react portal for components registered under the componentFramework.\n   * We do this because we want all portals to be in the same tree - in order to get\n   * Context to work properly.\n   */\n\n\n  AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n    this.portals = __spreadArrays(this.portals, [portal]);\n    this.batchUpdate(this.waitForInstance(reactComponent, resolve));\n  };\n\n  AgGridReact.prototype.batchUpdate = function (callback) {\n    var _this = this;\n\n    if (this.hasPendingPortalUpdate) {\n      return callback && callback();\n    }\n\n    setTimeout(function () {\n      if (_this.api) {\n        // destroyed?\n        _this.forceUpdate(function () {\n          callback && callback();\n          _this.hasPendingPortalUpdate = false;\n        });\n      }\n    });\n    this.hasPendingPortalUpdate = true;\n  };\n\n  AgGridReact.prototype.destroyPortal = function (portal) {\n    this.portals = this.portals.filter(function (curPortal) {\n      return curPortal !== portal;\n    });\n    this.batchUpdate();\n  };\n\n  AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n    if (propKey === 'rowData') {\n      // for row data we either return the supplied strategy, or:\n      // if deltaRowDataMode we default to IdentityChecks,\n      // if not we default to DeepValueChecks (with the rest of the properties)\n      if (!!this.props.rowDataChangeDetectionStrategy) {\n        return this.props.rowDataChangeDetectionStrategy;\n      } else if (this.props['deltaRowDataMode']) {\n        return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n      }\n    } // all non row data properties will default to DeepValueCheck\n\n\n    return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n  };\n\n  AgGridReact.prototype.shouldComponentUpdate = function (nextProps) {\n    this.processPropsChanges(this.props, nextProps); // we want full control of the dom, as ag-Grid doesn't use React internally,\n    // so for performance reasons we tell React we don't need render called after\n    // property changes.\n\n    return false;\n  };\n\n  AgGridReact.prototype.componentDidUpdate = function (prevProps) {\n    this.processPropsChanges(prevProps, this.props);\n  };\n\n  AgGridReact.prototype.processPropsChanges = function (prevProps, nextProps) {\n    var changes = {};\n    this.extractGridPropertyChanges(prevProps, nextProps, changes);\n    this.extractDeclarativeColDefChanges(nextProps, changes);\n\n    if (Object.keys(changes).length > 0) {\n      ag_grid_community_1.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n    }\n  };\n\n  AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n    var debugLogging = !!nextProps.debug;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps)) {\n      var detectionStrategy = this.changeDetectionService.getStrategy(changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck);\n      var currentColDefs = this.gridOptions.columnDefs;\n      var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps);\n\n      if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n        if (debugLogging) {\n          console.log(\"agGridReact: colDefs definitions changed\");\n        }\n\n        changes['columnDefs'] = {\n          previousValue: this.gridOptions.columnDefs,\n          currentValue: agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps)\n        };\n      }\n    }\n  };\n\n  AgGridReact.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n    var _this = this;\n\n    var debugLogging = !!nextProps.debug;\n    var changedKeys = Object.keys(nextProps);\n    changedKeys.forEach(function (propKey) {\n      if (ag_grid_community_1.ComponentUtil.ALL_PROPERTIES.indexOf(propKey) !== -1) {\n        var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n\n        if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n          if (debugLogging) {\n            console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n          }\n\n          changes[propKey] = {\n            previousValue: prevProps[propKey],\n            currentValue: nextProps[propKey]\n          };\n        }\n      }\n    });\n    ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      if (_this.props[funcName] !== nextProps[funcName]) {\n        if (debugLogging) {\n          console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n        }\n\n        changes[funcName] = {\n          previousValue: prevProps[funcName],\n          currentValue: nextProps[funcName]\n        };\n      }\n    });\n  };\n\n  AgGridReact.prototype.componentWillUnmount = function () {\n    if (this.api) {\n      this.api.destroy();\n      this.api = null;\n    }\n\n    this.destroyed = true;\n  };\n\n  AgGridReact.prototype.isDisableStaticMarkup = function () {\n    return !!this.props.disableStaticMarkup;\n  };\n\n  AgGridReact.MAX_COMPONENT_CREATION_TIME = 1000; // a second should be more than enough to instantiate a component\n\n  return AgGridReact;\n}(react_1.Component);\n\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n  gridOptions: PropTypes.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\n\nfunction addProperties(listOfProps, propType) {\n  listOfProps.forEach(function (propKey) {\n    AgGridReact[propKey] = propType;\n  });\n}\n\nvar ReactFrameworkComponentWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ReactFrameworkComponentWrapper, _super);\n\n  function ReactFrameworkComponentWrapper(agGridReact) {\n    var _this = _super.call(this) || this;\n\n    _this.agGridReact = agGridReact;\n    return _this;\n  }\n\n  ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n    return new reactComponent_1.ReactComponent(UserReactComponent, this.agGridReact, componentType);\n  };\n\n  return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper);","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/blockchain studies/ZubToken/git-hub-finder-/node_modules/ag-grid-react/lib/agGridReact.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","defineProperty","exports","value","React","require","react_1","PropTypes","ag_grid_community_1","agGridColumn_1","reactComponent_1","changeDetectionService_1","AgGridReact","_super","props","state","_this","call","changeDetectionService","ChangeDetectionService","api","portals","hasPendingPortalUpdate","destroyed","render","createElement","style","createStyleForDiv","ref","e","eGridDiv","height","containerStyle","keys","forEach","key","componentDidMount","modules","gridParams","providedBeanInstances","agGridReact","frameworkComponentWrapper","ReactFrameworkComponentWrapper","gridOptions","AgGridColumn","hasChildColumns","columnDefs","mapChildColumnDefs","ComponentUtil","copyAttributesToGridOptions","Grid","columnApi","waitForInstance","reactComponent","resolve","runningTime","rendered","MAX_COMPONENT_CREATION_TIME","console","error","getReactComponentName","window","setTimeout","mountReactPortal","portal","batchUpdate","callback","forceUpdate","destroyPortal","filter","curPortal","getStrategyTypeForProp","propKey","rowDataChangeDetectionStrategy","ChangeDetectionStrategyType","IdentityCheck","DeepValueCheck","shouldComponentUpdate","nextProps","processPropsChanges","componentDidUpdate","prevProps","changes","extractGridPropertyChanges","extractDeclarativeColDefChanges","processOnChange","debugLogging","debug","detectionStrategy","getStrategy","currentColDefs","newColDefs","areEqual","log","previousValue","currentValue","changedKeys","ALL_PROPERTIES","indexOf","changeDetectionStrategy","getEventCallbacks","funcName","componentWillUnmount","destroy","isDisableStaticMarkup","disableStaticMarkup","Component","propTypes","object","addProperties","func","BOOLEAN_PROPERTIES","bool","STRING_PROPERTIES","string","OBJECT_PROPERTIES","ARRAY_PROPERTIES","array","NUMBER_PROPERTIES","number","FUNCTION_PROPERTIES","listOfProps","propType","createWrapper","UserReactComponent","componentType","ReactComponent","BaseComponentWrapper"],"mappings":"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","sourcesContent":["// ag-grid-react v23.0.3\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar PropTypes = require(\"prop-types\");\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar agGridColumn_1 = require(\"./agGridColumn\");\nvar reactComponent_1 = require(\"./reactComponent\");\nvar changeDetectionService_1 = require(\"./changeDetectionService\");\nvar AgGridReact = /** @class */ (function (_super) {\n    __extends(AgGridReact, _super);\n    function AgGridReact(props, state) {\n        var _this = _super.call(this, props, state) || this;\n        _this.props = props;\n        _this.state = state;\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n        _this.api = null;\n        _this.portals = [];\n        _this.hasPendingPortalUpdate = false;\n        _this.destroyed = false;\n        return _this;\n    }\n    AgGridReact.prototype.render = function () {\n        var _this = this;\n        return React.createElement(\"div\", {\n            style: this.createStyleForDiv(),\n            ref: function (e) {\n                _this.eGridDiv = e;\n            }\n        }, this.portals);\n    };\n    AgGridReact.prototype.createStyleForDiv = function () {\n        var style = { height: \"100%\" };\n        // allow user to override styles\n        var containerStyle = this.props.containerStyle;\n        if (containerStyle) {\n            Object.keys(containerStyle).forEach(function (key) {\n                style[key] = containerStyle[key];\n            });\n        }\n        return style;\n    };\n    AgGridReact.prototype.componentDidMount = function () {\n        var modules = this.props.modules || [];\n        var gridParams = {\n            providedBeanInstances: {\n                agGridReact: this,\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this)\n            },\n            modules: modules\n        };\n        var gridOptions = this.props.gridOptions || {};\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(this.props)) {\n            gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(this.props);\n        }\n        this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n        // don't need the return value\n        new ag_grid_community_1.Grid(this.eGridDiv, this.gridOptions, gridParams);\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n    };\n    AgGridReact.prototype.waitForInstance = function (reactComponent, resolve, runningTime) {\n        var _this = this;\n        if (runningTime === void 0) { runningTime = 0; }\n        // if the grid has been destroyed in the meantime just resolve\n        if (this.destroyed) {\n            resolve(null);\n            return;\n        }\n        if (reactComponent.rendered()) {\n            resolve(null);\n        }\n        else {\n            if (runningTime >= AgGridReact.MAX_COMPONENT_CREATION_TIME) {\n                console.error(\"ag-Grid: React Component '\" + reactComponent.getReactComponentName() + \"' not created within \" + AgGridReact.MAX_COMPONENT_CREATION_TIME + \"ms\");\n                return;\n            }\n            window.setTimeout(function () { return _this.waitForInstance(reactComponent, resolve, runningTime + 5); }, 5);\n        }\n    };\n    /**\n     * Mounts a react portal for components registered under the componentFramework.\n     * We do this because we want all portals to be in the same tree - in order to get\n     * Context to work properly.\n     */\n    AgGridReact.prototype.mountReactPortal = function (portal, reactComponent, resolve) {\n        this.portals = __spreadArrays(this.portals, [portal]);\n        this.batchUpdate(this.waitForInstance(reactComponent, resolve));\n    };\n    AgGridReact.prototype.batchUpdate = function (callback) {\n        var _this = this;\n        if (this.hasPendingPortalUpdate) {\n            return callback && callback();\n        }\n        setTimeout(function () {\n            if (_this.api) { // destroyed?\n                _this.forceUpdate(function () {\n                    callback && callback();\n                    _this.hasPendingPortalUpdate = false;\n                });\n            }\n        });\n        this.hasPendingPortalUpdate = true;\n    };\n    AgGridReact.prototype.destroyPortal = function (portal) {\n        this.portals = this.portals.filter(function (curPortal) { return curPortal !== portal; });\n        this.batchUpdate();\n    };\n    AgGridReact.prototype.getStrategyTypeForProp = function (propKey) {\n        if (propKey === 'rowData') {\n            // for row data we either return the supplied strategy, or:\n            // if deltaRowDataMode we default to IdentityChecks,\n            // if not we default to DeepValueChecks (with the rest of the properties)\n            if (!!this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            else if (this.props['deltaRowDataMode']) {\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n        // all non row data properties will default to DeepValueCheck\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n    };\n    AgGridReact.prototype.shouldComponentUpdate = function (nextProps) {\n        this.processPropsChanges(this.props, nextProps);\n        // we want full control of the dom, as ag-Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    };\n    AgGridReact.prototype.componentDidUpdate = function (prevProps) {\n        this.processPropsChanges(prevProps, this.props);\n    };\n    AgGridReact.prototype.processPropsChanges = function (prevProps, nextProps) {\n        var changes = {};\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n        if (Object.keys(changes).length > 0) {\n            ag_grid_community_1.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n        }\n    };\n    AgGridReact.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n        var debugLogging = !!nextProps.debug;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps)) {\n            var detectionStrategy = this.changeDetectionService.getStrategy(changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck);\n            var currentColDefs = this.gridOptions.columnDefs;\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps);\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: colDefs definitions changed\");\n                }\n                changes['columnDefs'] =\n                    {\n                        previousValue: this.gridOptions.columnDefs,\n                        currentValue: agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps)\n                    };\n            }\n        }\n    };\n    AgGridReact.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n        var _this = this;\n        var debugLogging = !!nextProps.debug;\n        var changedKeys = Object.keys(nextProps);\n        changedKeys.forEach(function (propKey) {\n            if (ag_grid_community_1.ComponentUtil.ALL_PROPERTIES.indexOf(propKey) !== -1) {\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n                    }\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (_this.props[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n                }\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    };\n    AgGridReact.prototype.componentWillUnmount = function () {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n        this.destroyed = true;\n    };\n    AgGridReact.prototype.isDisableStaticMarkup = function () {\n        return !!this.props.disableStaticMarkup;\n    };\n    AgGridReact.MAX_COMPONENT_CREATION_TIME = 1000; // a second should be more than enough to instantiate a component\n    return AgGridReact;\n}(react_1.Component));\nexports.AgGridReact = AgGridReact;\nAgGridReact.propTypes = {\n    gridOptions: PropTypes.object\n};\naddProperties(ag_grid_community_1.ComponentUtil.getEventCallbacks(), PropTypes.func);\naddProperties(ag_grid_community_1.ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ag_grid_community_1.ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ag_grid_community_1.ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ag_grid_community_1.ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ag_grid_community_1.ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ag_grid_community_1.ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\nfunction addProperties(listOfProps, propType) {\n    listOfProps.forEach(function (propKey) {\n        AgGridReact[propKey] = propType;\n    });\n}\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\n    __extends(ReactFrameworkComponentWrapper, _super);\n    function ReactFrameworkComponentWrapper(agGridReact) {\n        var _this = _super.call(this) || this;\n        _this.agGridReact = agGridReact;\n        return _this;\n    }\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n        return new reactComponent_1.ReactComponent(UserReactComponent, this.agGridReact, componentType);\n    };\n    return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper));\n"]},"metadata":{},"sourceType":"script"}